name: 🚀 Deploy React App to cPanel

# Controls when the workflow will run
on:
  push:
    branches: [main] # Change to 'master' if your main branch is named 'master'
  pull_request:
    branches: [main] # Optional: runs on PRs to main to test build, but won't deploy

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Checkout the code from the repository
      - name: 🛒 Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the correct version of Node.js
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Use the Node.js version your project requires
          cache: "npm"

      # Step 3: Install dependencies (use ci for cleaner, reproducible installs)
      - name: 📦 Install NPM dependencies
        run: npm ci

      # Step 4: Build the project (this creates the /build folder)
      - name: 🏗️ Build project
        run: npm run build

      # Step 5: List build contents (great for debugging)
      - name: 📁 Show dist contents
        run: ls -la dist/

      # Step 6: Deploy the built files to cPanel via FTP
      - name: 📤 Deploy to cPanel
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/ # The folder React created
          server-dir: ./app.fastrasuite.com/ # The target folder on the server
          # The following options are important for a clean deploy
          dangerous-clean-slate: true # Deletes ALL files on the server-dir before uploading
          # set-ftp-flags: true       # Uncomment if you have permission issues
